[versions]
case = "0.13.0"
case-boundary = "0.6.3"
coroutines = "1.7.1"
kotlin = "1.8.21"
ktor = "2.3.1"
# Different logback version needed for ktor as it breaks with the new one
logback-ktor = "1.2.11"

[libraries]
case-mock-types = { module = "io.contract-testing.contractcase:case_example_mock_types", version.ref = "case" }
case-matchers = { module = "io.contract-testing.contractcase:test-equivalence-matchers", version.ref = "case" }
case-boundary = { module = "io.contract-testing.contractcase:case_boundary", version.ref = "case-boundary" }
test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutines" }

# Ktor for both server and client, only used for testing
ktor-server-core = { module = "io.ktor:ktor-server-core", version.ref = "ktor" }
ktor-server-cio = { module = "io.ktor:ktor-server-cio", version.ref = "ktor" }
ktor-server-logging = { module = "io.ktor:ktor-server-call-logging", version.ref = "ktor" }
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
ktor-serialization = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-logback = { module = "ch.qos.logback:logback-classic", version.ref = "logback-ktor" }

[bundles]
case = ["case-mock-types", "case-matchers", "case-boundary"]
kotlin-test = ["coroutines-test", "test"]
ktor = [
    "ktor-server-core",
    "ktor-server-cio",
    "ktor-server-logging",
    "ktor-client-core",
    "ktor-client-logging",
    "ktor-client-content-negotiation",
    "ktor-client-okhttp",
    "ktor-serialization",
    "ktor-logback"
]

[plugins]
multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }

